= Documentation for Misago

Misago is yet another framework for PHP that is inspired on Rails.

It tries to mimic or implement most of Rails' API, so you may follow guides
and books for Ruby on Rails, and you shall find your marks in Misago. Misago
is far from implementing all of Rails API, and will surely never (it's not a
copycat), but the things you rely on daily should be there. If not, patches
are welcomed.

Please note that misago requires PHP 5.3+.

==Getting Started

Download and install misago somewhere.

On command line (CLI), run:

  $ misago my_project -d mysql
  $ cd my_project/
  $ script/server
  
Then point your browser to http://localhost:3000 and cheers, you're
running on misago (yes, it serves an error because there is no
+WelcomeController+).

==Webs servers

Only LightTPD is supported by +script/server+ for the moment.

You may use another Web server by pointing the FastCGI process to
+myapp/public/index.php+ and you shall use the 404 handler (see
+myapp/config/lighttpd.conf+ for examples).

==Shell

Download and install PHPSH, then run in CLI:

  $ script/shell

You then have a command line prompt that gives you the opportunity to work
with anything from your application directly. For instance :

  php> $post = new Post(45);
  php> $post->delete();

==Contents

- +app/+ => contains your application
- +app/controllers/+ => contains your controllers (<tt>Misago\ActionController</tt>)
- +app/models/+ => contains your models and mailers (<tt>Misago\ActiveRecord</tt> & <tt>Misago\ActionView</tt>)
- +app/views/+ => contains your views (<tt>Misago\ActionView</tt>)
- +app/views/layouts/+ => contains your layouts
- +config/+ => contains configuration files for your app
- +config/environments/+ => particular configuration per environment
- +config/locales/+ => contains your locales (<tt>Misago\I18n</tt>)
- +db/+ => anything related to your database (<tt>Misago\ActiveRecord\Migration</tt>)
- +lib/+ => application specific libraries
- +log/+ => application logs
- +public/+ => the root of webserver
- +public/css/+ => stylesheet files
- +public/js/+ => JavaScript files
- +scripts/+ => useful command line scripts
- +test/fixtures/+ => sample data for your tests
- +test/functional/+ => tests for your controllers (<tt>Misago\ActionController\TestCase</tt>)
- +test/unit/+ => tests for your models, librairies, etc. (<tt>Misago\Unit\TestCase</tt> & <tt>Test\Unit\TestCase</tt>)
- +vendor/+ => external libraries, not specific to your project
- +Pakefile+ => contains tasks for pake [http://github.com/ysbaddaden/pake]

=== Autoloading

It's possible to autoload classes. See 
http://groups.google.com/group/php-standards/web/psr-0-final-proposal
for the syntax to use.

