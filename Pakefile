<?php

desc("Runs tests for Misago");
task('test', function()
{
  $filename  = '/tmp/test_misago_'.getmypid().'.php';
  $files     = load_test_files(__DIR__.'/test/unit');
  
  $php_code  = '<?php ';
  foreach($files as $file) {
    $php_code .= "require_once('$file');";
  }
  $php_code .= 'Misago\Unit\TestCase::$batch_run = true;';
  $php_code .= 'Misago\Unit\TestCase::create_database(true);';
  $php_code .= 'Test\Unit\Autorunner::run(\'Misago\');';
  $php_code .= 'Misago\Unit\TestCase::drop_database(true);';
  $php_code .= ' ?>';
  
  file_put_contents($filename, $php_code);
  passthru("php $filename");
  unlink($filename);
});

function & load_test_files($path)
{
  $files = array();
  _load_test_files($path, $files);
  return $files;
}

function _load_test_files($path, &$files)
{
  $dh = opendir($path);
  while(($file = readdir($dh)) !== false)
  {
    if ($file != '.' and $file != '..')
    {
      if (is_file("$path/$file")) {
        $files[] = "$path/$file";
      }
      elseif(is_dir("$path/$file")) {
        _load_test_files("$path/$file", $files);
      }
    }
  }
  closedir($dh);
}


desc("Builds the documentation for misago");
task('pdoc', function()
{
  pake('pdoc:clean');
  passthru("pdoc --project misago --main doc/README --exclude bin --exclude build --exclude doc --exclude templates --exclude test --exclude vendor . doc/");
});

desc("Removes the documentation generated by pdoc");
task('pdoc:clean', function() {
  passthru("rm doc/*.html doc/*.css doc/classes/ -rf");
});


desc("Builds a PHAR archive of misago");
task('phar', function()
{
  if (ini_get('phar.readonly') == 1)
  {
    passthru("php -d phar.readonly=0 {$_SERVER['argv'][0]} phar");
    exit;
  }
  
  build_phar_parse_dir('lib', $files);
  build_phar_parse_dir('vendor', $files);
  build_phar_parse_dir('templates', $files);
  sort($files);
  
  $phar = new Phar('build/misago.phar', 0, 'misago.phar');
  foreach($files as $file) {
    $phar->addFile($file);
  }
  $phar->setStub('<?php __HALT_COMPILER(); ?>');
  $phar->stopBuffering();
  
  echo "Built build/misago.phar\n";
});

function build_phar_parse_dir($path, &$files)
{
  $dh = opendir($path);
  while(($file = readdir($dh)) !== false)
  {
    if ($file[0] == '.') {
      continue;
    }
    $file = "$path/$file";
    
    if (is_file($file)) {
      $files[] = $file;
    }
    elseif (is_dir($file)) {
      build_phar_parse_dir($file, $files);
    }
  }
  closedir($dh);
}

?>
